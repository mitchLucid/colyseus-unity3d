name: Release & Create Unity Package

on:
  push:
    branches: master
   
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2
    - uses: EndBug/version-check@v1
      id: check
      with:
        file-name: package.json
        diff-search: true
    - name: Log when changed
      if: steps.check.outputs.changed == 'true'
      run: 'echo "Version change found in commit ${{ steps.check.outputs.commit }}! New version: ${{ steps.check.outputs.version }} (${{ steps.check.outputs.type }})"'
    - name: Gather files
      if: steps.check.outputs.changed == 'true'
      run: |
        echo "Assets/Colyseus.meta" > metaList
        find Assets/Colyseus/ -name \*.meta >> metaList
    # - name: Create Directory
    #   run: mkdir Release
    - name: Generate Unity Package
      if: steps.check.outputs.changed == 'true'
      id: build-package
      uses: pCYSl5EDgo/create-unitypackage@master
      with:
        package-path: 'Colyseus.unitypackage'
        include-files: metaList
    # - name: Upload Package
    #   uses: actions/upload-artifact@master
    #   with:
    #     path: ./Colyseus.unitypackage
    #     name: Colyseus
    - name: Changelog
      if: steps.check.outputs.changed == 'true'
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
    - name: Create Release
      if: steps.check.outputs.changed == 'true'
      id: release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.check.outputs.version }}
        release_name: ${{ steps.check.outputs.version }}
        body: |
            # Changes
            ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: true
    - name: Upload Release Asset
      if: steps.release.outputs.released
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./Colyseus.unitypackage
        asset_name: Colyseus.unitypackage
        asset_content_type: application/x-gzip
